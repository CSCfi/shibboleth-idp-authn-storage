<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize" default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
        p:placeholderSuffix="}" />

    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <import resource="../../../conf/authn/storage-authn-config.xml" />

    <bean id="PopulateClientStorageLoadContext"
        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />

    <bean id="ExtractStorageAuthenticationEvent" class="fi.csc.idp.authn.impl.ExtractStorageAuthenticationEvent"
        scope="prototype" p:authenticationEventCache-ref="shibboleth.AuthenticationEventCache" />

    <bean id="VerifyStorageAuthenticationEvent" class="fi.csc.idp.authn.impl.VerifyStorageAuthenticationEvent"
        p:defaultLimits-ref="AuthenticationEventLimits" p:relyingPartyLimits-ref="RelyingPartyLimits" scope="prototype" />

    <bean id="ValidateStorageAuthentication" class="fi.csc.idp.authn.impl.ValidateStorageAuthentication"
        scope="prototype" />

    <bean id="UpdateStorageAuthenticationEvent" class="fi.csc.idp.authn.impl.UpdateStorageAuthenticationEvent"
        scope="prototype" p:authenticationEventCache-ref="shibboleth.AuthenticationEventCache" />

    <bean id="shibboleth.AuthenticationEventCache" class="fi.csc.idp.authn.storage.AuthenticationEventCache"
        depends-on="shibboleth.LoggingService" p:userSalt="%{idp.storageauthn.salt}"
        p:entryExpiration="#{'%{idp.storageauthn.authenticationevent.lifetime:PT168H}'}"
        p:referenceStorage-ref="#{'%{idp.storageauthn.reference.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}"
        p:eventStorage-ref="#{'%{idp.storageauthn.event.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}" />

    <bean id="PopulateClientStorageSaveContext"
        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />

    <bean id="StoreAuthenticationEvent" class="fi.csc.idp.authn.impl.StoreAuthenticationEvent" scope="prototype"
        p:authenticationEventCache-ref="shibboleth.AuthenticationEventCache" />

</beans>
